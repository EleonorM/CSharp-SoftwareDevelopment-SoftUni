// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P01_StudentSystem.Data;

namespace P01_StudentSystem.Migrations
{
    [DbContext(typeof(StudentSystemContext))]
    [Migration("20191107090845_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsUnicode(true);

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true);

                    b.Property<decimal>("Price")
                        .HasColumnType("DECIMAL(15,2)");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            EndDate = new DateTime(2019, 11, 8, 11, 8, 43, 823, DateTimeKind.Local).AddTicks(7199),
                            Name = "Course1",
                            Price = 10.20m,
                            StartDate = new DateTime(2019, 11, 6, 11, 8, 43, 823, DateTimeKind.Local).AddTicks(5695)
                        },
                        new
                        {
                            CourseId = 2,
                            EndDate = new DateTime(2019, 11, 8, 11, 8, 43, 824, DateTimeKind.Local).AddTicks(340),
                            Name = "Course2",
                            Price = 10.20m,
                            StartDate = new DateTime(2019, 11, 5, 11, 8, 43, 824, DateTimeKind.Local).AddTicks(280)
                        },
                        new
                        {
                            CourseId = 3,
                            EndDate = new DateTime(2019, 11, 8, 11, 8, 43, 824, DateTimeKind.Local).AddTicks(388),
                            Name = "Course3",
                            Price = 10.20m,
                            StartDate = new DateTime(2019, 11, 4, 11, 8, 43, 824, DateTimeKind.Local).AddTicks(380)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.Property<int>("HomeworkId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<int>("ContentType");

                    b.Property<int>("CourseId");

                    b.Property<int>("StudentId");

                    b.Property<DateTime>("SubmissionTime");

                    b.HasKey("HomeworkId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("HomeworkSubmissions");

                    b.HasData(
                        new
                        {
                            HomeworkId = 1,
                            Content = "Homework1",
                            ContentType = 0,
                            CourseId = 2,
                            StudentId = 1,
                            SubmissionTime = new DateTime(2019, 11, 7, 11, 8, 43, 840, DateTimeKind.Local).AddTicks(8981)
                        },
                        new
                        {
                            HomeworkId = 2,
                            Content = "Homework2",
                            ContentType = 0,
                            CourseId = 3,
                            StudentId = 3,
                            SubmissionTime = new DateTime(2019, 11, 7, 11, 8, 43, 841, DateTimeKind.Local).AddTicks(84)
                        },
                        new
                        {
                            HomeworkId = 3,
                            Content = "Homework3",
                            ContentType = 0,
                            CourseId = 1,
                            StudentId = 2,
                            SubmissionTime = new DateTime(2019, 11, 7, 11, 8, 43, 841, DateTimeKind.Local).AddTicks(124)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<int>("ResourceType");

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("ResourceId");

                    b.HasIndex("CourseId");

                    b.ToTable("Resources");

                    b.HasData(
                        new
                        {
                            ResourceId = 1,
                            CourseId = 2,
                            Name = "Resource1",
                            ResourceType = 2,
                            Url = "url1"
                        },
                        new
                        {
                            ResourceId = 2,
                            CourseId = 1,
                            Name = "Resource2",
                            ResourceType = 2,
                            Url = "url2"
                        },
                        new
                        {
                            ResourceId = 3,
                            CourseId = 3,
                            Name = "Resource3",
                            ResourceType = 2,
                            Url = "url3"
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthday");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("CHAR(10)");

                    b.Property<DateTime>("RegisteredOn");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Name = "Student1",
                            RegisteredOn = new DateTime(2019, 11, 7, 11, 8, 43, 813, DateTimeKind.Local).AddTicks(4252)
                        },
                        new
                        {
                            StudentId = 2,
                            Name = "Student2",
                            RegisteredOn = new DateTime(2019, 11, 7, 11, 8, 43, 817, DateTimeKind.Local).AddTicks(6767)
                        },
                        new
                        {
                            StudentId = 3,
                            Name = "Student3",
                            RegisteredOn = new DateTime(2019, 11, 7, 11, 8, 43, 817, DateTimeKind.Local).AddTicks(6830)
                        },
                        new
                        {
                            StudentId = 4,
                            Name = "Student4",
                            RegisteredOn = new DateTime(2019, 11, 7, 11, 8, 43, 817, DateTimeKind.Local).AddTicks(6840)
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId");

                    b.Property<int>("CourseId");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourses");

                    b.HasData(
                        new
                        {
                            StudentId = 2,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 2
                        });
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Homework", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("HomeworkSubmissions")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.Resource", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("P01_StudentSystem.Data.Models.StudentCourse", b =>
                {
                    b.HasOne("P01_StudentSystem.Data.Models.Course", "Course")
                        .WithMany("StudentsEnrolled")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("P01_StudentSystem.Data.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
